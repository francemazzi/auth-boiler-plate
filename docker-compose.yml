version: '3.8'
services:
  app:
    build: .
    ports:
      - '8080:8080'
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth-boiler-plate?schema=public
      - JWT_SECRET=change-this-secret-in-production
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - FRONTEND_URL=http://localhost:8080
      - NODE_ENV=development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
      - mailhog
    command: >
      sh -c "npm install &&
             npm run prisma:generate &&
             npm run prisma:migrate &&
             npm run dev"

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth-boiler-plate
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - '6379:6379'
  #   volumes:
  #     - redis_data:/data

  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   volumes:
  #     - mongodb_data:/data/db

  mailhog:
    image: jcalonso/mailhog:latest
    platform: linux/arm64
    ports:
      - '1025:1025' # SMTP server
      - '8025:8025' # Web interface

volumes:
  postgres_data:
